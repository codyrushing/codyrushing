/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */progress,sub,sup{vertical-align:baseline}button,hr,input{overflow:visible}*,legend{box-sizing:border-box}.maternity-visualizer,sub,sup{position:relative}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}body{margin:0;font-family:'Carrois Gothic',sans-serif;font-size:14px;line-height:1.2;color:#333}.maternity-visualizer .industries .industry-title,h1,h2,h3,h4{font-family:'Pathway Gothic One',sans-serif}h1,h2,h3,h4{margin:1em 0}h1:first-child,h2:first-child,h3:first-child,h4:first-child{margin-top:0}h1{font-size:3.5em}h2{font-size:2em}h3{font-size:1.5em}.maternity-visualizer .axis{position:fixed}.maternity-visualizer .axis line{stroke:#ccc}.maternity-visualizer .axis .tick text{fill:#555;letter-spacing:-.05em;text-anchor:middle}.maternity-visualizer .axis .label-group text{text-anchor:end}.maternity-visualizer .axis .label-group .heading{font-size:1.4em;fill:#333}.maternity-visualizer .axis .industries .label-group .heading,.maternity-visualizer .axis .label-group .heading-unit{font-size:1em}.maternity-visualizer .industries .industry-title{font-size:3em}.maternity-visualizer .bubble-group:hover{cursor:pointer}.maternity-visualizer .bubble-group:hover circle{stroke-width:2px}.maternity-visualizer .bubble-group path{stroke:none}.maternity-visualizer .chart-filters{position:absolute;max-width:70%;text-align:right;-webkit-transform:translate(0,50px);-ms-transform:translate(0,50px);transform:translate(0,50px)}.maternity-visualizer .filter-link{cursor:pointer;display:inline-block;font-size:.8em;border-radius:3px;background:#f4f4f4;color:#ccc;border:1px solid #ddd;padding:.5em;margin:.25em;position:relative}.maternity-visualizer .filter-link.active{background:#eee;color:#333;border-color:#333}.maternity-visualizer .filter-link.active:after{display:block}.maternity-visualizer .filter-link:after{content:"\00d7";font-size:.8em;font-family:sans-serif;display:none;position:absolute;top:-1px;right:2px}.tooltip{background:#fff;padding:10px;border:1px solid #e6e6e6;box-shadow:0 5px 15px rgba(0,0,0,.2);min-width:300px;max-width:400px}.tooltip .tooltip-accent{position:absolute}.tooltip.tooltip-bottom>.tooltip-accent,.tooltip.tooltip-top>.tooltip-accent{width:12px;height:6px}.tooltip.tooltip-top>.tooltip-accent{bottom:-6px;border-top:6px solid #fff;border-right:6px solid transparent;border-left:6px solid transparent}.tooltip.tooltip-bottom>.tooltip-accent{top:-6px;border-bottom:6px solid #fff;border-right:6px solid transparent;border-left:6px solid transparent}.tooltip h3{font-family:'Carrois Gothic',sans-serif;margin:0;padding:0}.tooltip .stats{padding-bottom:10px}.tooltip .item{clear:both;padding:8px 0 0;font-size:1.1em;border-bottom:1px dotted #ccc}.tooltip .item:after{content:"";display:table;clear:both}.tooltip .item:first-child{padding-top:0}.tooltip .item span{background:#fff;padding-bottom:1px;position:relative;bottom:-3px}.tooltip .item.sub{font-size:.8em;line-height:1;padding:2px 0 0;margin-left:10px}.tooltip .item.sub+.sub{padding-top:0}.tooltip .item-label,.tooltip .item-value{display:block}.tooltip .item-label{float:left;padding-right:.3em;color:gray}.tooltip .item-value{float:right;padding-left:.3em}.tooltip .item-value.positive{color:green;font-weight:700}.tooltip .item-value.negative{color:red;font-weight:700}line,path{fill:none;stroke:#000;shape-rendering:crispEdges}
/*# sourceMappingURL=data:application/json;base64, */
